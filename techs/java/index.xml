<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on Kingsley Samuel</title>
    <link>https://github.com/ksamuel274/Kingsley_Portfolio/techs/java/</link>
    <description>Recent content in Java on Kingsley Samuel</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 02 May 2020 19:47:09 +0200</lastBuildDate><atom:link href="https://github.com/ksamuel274/Kingsley_Portfolio/techs/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Basic Queue</title>
      <link>https://github.com/ksamuel274/Kingsley_Portfolio/portfolio/project2/</link>
      <pubDate>Sat, 02 May 2020 19:47:09 +0200</pubDate>
      
      <guid>https://github.com/ksamuel274/Kingsley_Portfolio/portfolio/project2/</guid>
      <description>This project takes in a data set of songs then sorts them into a queue.
There are several ways to sort and search through data. Within my studies of data structures I have found that there are many methods to get to the same result, it&amp;rsquo;s up to you the programmer to choose which is the most efficient and the fastest to process. This project show uses queues and stacks in order to take in a set of data, specifically in this case Spotify Chart list, the sort it and display the music to play in a queue.</description>
    </item>
    
    <item>
      <title>Basic Queue</title>
      <link>https://github.com/ksamuel274/Kingsley_Portfolio/portfolio/project3/</link>
      <pubDate>Sat, 02 May 2020 19:47:09 +0200</pubDate>
      
      <guid>https://github.com/ksamuel274/Kingsley_Portfolio/portfolio/project3/</guid>
      <description>This project takes in a data set of songs then sorts them into a queue.
There are several ways to sort and search through data. Within my studies of data structures I have found that there are many methods to get to the same result, it&amp;rsquo;s up to you the programmer to choose which is the most efficient and the fastest to process. This project show uses queues in order to take in a set of data, specifically in this case Spotify Chart list, the sort it and display the music queue in-order of alphabetical order.</description>
    </item>
    
    <item>
      <title>Storing Songs using Binary Trees</title>
      <link>https://github.com/ksamuel274/Kingsley_Portfolio/portfolio/sample-project/</link>
      <pubDate>Sat, 02 May 2020 19:47:09 +0200</pubDate>
      
      <guid>https://github.com/ksamuel274/Kingsley_Portfolio/portfolio/sample-project/</guid>
      <description>This project takes in a data set of songs then sorts and creates a new playlist using a binary search tree.
There are several ways to sort and search through data. Within my studies of data structures I have found that there are many methods to get to the same result, it&amp;rsquo;s up to you the programmer to choose which is the most efficient and the fastest to process. This project show uses binary search tree in order to take in a set of data, specifically in this case Spotify Chart list, the sort it and create a new playlist using a binary search tree.</description>
    </item>
    
  </channel>
</rss>
